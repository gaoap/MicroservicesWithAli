Sentinel流控模式分别是什么
直接,关联,链式

直接
默认流控模式为直接,当超过单机阈值的条件,就会限流

关联
关联模式,当关联的资源超过单机阈值,则自己限流
   当选择为关联以后，会出现关联资源的输入框。假设现在有两个接口，/testA和testB，在资源名为/testA的流控规则中配置为关联，关联的资源为/testB，当/testB达到配置的流控限制以后，则/testA会被限流。需要注意的是，不需要单独配置/testB的规则，当前配置的流控基本规则就是针对/testB的。

链路的作用是当两个不同的资源访问同一个资源时,对其中的一个资源,也就是一个链路进行限流

当选择链路的时候，会出现入口资源的输入框。如果是高版本的sentinel的话，不需要进行web-context-unify: false配置，应该是在2.2.5.RELEASE版本前后。使用链路的时候，是搭配@SentinelResource注解使用的，例如现在/testA和testB这两个接口都会访问方法base()，我们在base()方法上添加@SentinelResource("base")注解，访问/testA(/testB)以后，在簇点链路里面则会出现base的链路，使用链路的时候，我们是在base上面进行配置，而不是在接口位置进行配置，例如现在入口资源配置的是/testA，那么/testB接口即使达到限流规则也不会进行限流。

链路要修改参数：
需要注意的是，链路限流并不适合此处的场景，因为链路限流的调用链是指在一个微服务内部，如controller调用service的场景，而本文主要讨论跨微服务之间的调用。
跨微服务的要使用的参数是 针对来源。服务提供方要实现RequestOriginParser


 第二步:因为版本的原因,所有的资源都默认在sentinel_default_context下,我们要通过配置文件打散链路聚焦
 spring:
   application:
   cloud:
     sentinel:
       transport:
         dashboard: localhost:8180 #sentinel地址
       web-context-unify: false #打散链路聚焦sentinel_spring_web_context,默认为true


流控效果，需要注意的是，只有当阈值类型为qps时才会出现流控效果，如果阈值类型为并发线程数的话，流控效果默认为快速失败，即流控效果是针对qps进行的设置的：

        快速失败：直接失败，不进行任何处理；

        wam up(预热)：当选择wam up以后会出现预热时长的输入框，预热指定是经过执行时间，该服务的qps充开始值增加到设定值，开始值的计算公式为：单机阈值/codeFactor，codeFactor的默认值为3。例如现在单机阈值配置的是20，预热时间为6s，即开始是单机阈值为7，经过6s以后单机阈值升为20。


           排队等待：当选择排队等待的时候，会出现超时时间的输出框。排队等待指的是让请求均匀的通过，而不是一次性请求。例如配置的qps是2，则意味着每500ms通过一个请求(需要注意的是，排队等待目前是不支持qps>1000的情况)。那么超时时间代表的是什么呢？这里涉及到一个计算的问题，例如超时时间配置的是10000ms，qps配置的值还是2，也就是间隔时间还是500ms，如果此时进来一个请求，发现前面还有5个请求再排队，它是第六个请求，需要等待3000ms它才会被执行，但是3000ms<10000ms，那么它就会排队等待；但是如果前面有30的请求在排队，他需要等待15500ms，此时15500ms>10000ms，那么它就会触发该限流规则，被拒绝。


            规则含义：QPS = 10 表示一秒内匀速通过 10 个请求，每个请求平均间隔 100ms，超时时间表示排队的请求最多等待时间，2s 超时表示排队中的请求最多 20 个，再多就会被拒绝。

            简单计算方法：实际QPS / 超时时间s <= 阈值 说明请求可以全部执行，否则部分请求会被拒绝

系统规则：
LOAD：以系统1分钟的平均负载作为启发指标，进行自适应系统保护。当系统的1分钟平局负载超过设定的阈值，并且系统当前的并发线程数超过估算的系统容量时才会触发系统保护，系统容量=maxQps(最大qps)*minRt(最小响应时间)估算得出。设定参考值：cup cores (cpu核数)* 2.5。

RT：响应时间

线程数，入口qps以及cpu利用率就是字面意思

系统规则支持以下的模式：

Load 自适应（仅对 Linux/Unix-like 机器生效）：系统的 load1 作为启发指标，进行自适应系统保护。当系统 load1 超过设定的启发值，且系统当前的并发线程数超过估算的系统容量时才会触发系统保护（BBR 阶段）。系统容量由系统的 maxQps * minRt 估算得出。设定参考值一般是 CPU cores * 2.5。
CPU usage（1.5.0+ 版本）：当系统 CPU 使用率超过阈值即触发系统保护（取值范围 0.0-1.0），比较灵敏。
平均 RT：当单台机器上所有入口流量的平均 RT 达到阈值即触发系统保护，单位是毫秒。
并发线程数：当单台机器上所有入口流量的并发线程数达到阈值即触发系统保护。
入口 QPS：当单台机器上所有入口流量的 QPS 达到阈值即触发系统保护。

